(()=>{"use strict";const t=class{static violet(){return"#CC00FF"}static purple(){return"#8000FF"}static blue(){return"#0000FF"}static lightBlue(){return"#0080FF"}static skyBlue(){return"#00FFFF"}static blueGreen(){return"#00FF80"}static green(){return"#00FF00"}static limeGreen(){return"#80FF00"}static yellow(){return"#FFFF00"}static orange(){return"#FF8000"}static red(){return"#FF0000"}static grey(){return"#DADADA"}static white(){return"#FFFFFF"}},s=class{constructor(s,i,e=10,h=10,l=t.grey()){this.x=s,this.y=i,this.width=e,this.height=h,this.color=l}moveBy(t,s){this.x+=t,this.y+=s}moveTo(t,s){this.x=t,this.y=s}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}},i=class extends s{constructor(s=0,i=0,e=1,h=10,l=t.grey){super(s,i,2*h,2*h,l),this.speed=e,this.dx=this.speed,this.dy=-this.speed,this.radius=h,this.PI2=2*Math.PI}render(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,this.PI2),t.fillStyle=this.color,t.fill(),t.closePath()}updateSpeed(t){this.speed=t,this.dx=Math.sign(this.dx)*this.speed,this.dy=Math.sign(this.dy)*this.speed}move(){this.moveBy(this.dx,this.dy)}},e=class extends s{constructor(t,s,i,e,h){super(t,s,i,e,h),this.status=1}};class h{constructor({cols:t,rows:s,width:i,height:e,padding:h,offsetLeft:l,offsetTop:d}){this.cols=t,this.rows=s,this.bricks=[],this.width=i,this.height=e,this.padding=h,this.offsetLeft=l,this.offsetTop=d,this.init()}static color(s){switch(s){case 0:return t.violet();case 1:return t.purple();case 2:return t.blue();case 3:return t.lightBlue();case 4:return t.skyBlue();case 5:return t.blueGreen();case 6:return t.green();case 7:return t.limeGreen();case 8:return t.yellow();case 9:return t.orange();case 10:default:return t.red()}}init(){for(let t=0;t<this.cols;t+=1){this.bricks[t]=[];for(let s=0;s<this.rows;s+=1){const i=t*(this.width+this.padding)+this.offsetLeft,l=s*(this.height+this.padding)+this.offsetTop;this.bricks[t][s]=new e(i,l,this.width,this.height,h.color(s))}}}render(t){for(let s=0;s<this.cols;s+=1)for(let i=0;i<this.rows;i+=1){const e=this.bricks[s][i];1===e.status&&e.render(t)}}}const l=h,d=class extends s{constructor(t,s,i,e,h="16px Arial"){super(s,i,0,0,e),this.text=t,this.font=h,this.value=0}render(t){t.font=this.font,t.fillStyle=this.color,t.fillText(`${this.text} ${this.value}`,this.x,this.y)}},a=document.querySelector("body"),r="130px Helvetica",c="ArrowRight",o="ArrowLeft",n="RIGHT",u="LEFT";new class{constructor(e){this.canvas=document.getElementById(e),this.ctx=this.canvas.getContext("2d"),this.over=!1,this.ballRadius=10,this.startingBallSpeed=1,this.brickRowCount=11,this.brickColumnCount=14,this.brickWidth=75,this.brickHeight=20,this.brickPadding=10,this.brickOffsetLeft=30,this.brickOffsetTop=30,this.paddleWidth=100,this.paddleHeight=10,this.paddleXStart=(this.canvas.width-this.paddleWidth)/2,this.paddleYStart=this.canvas.height-this.paddleHeight,this.ball=new i(0,0,this.startingBallSpeed,this.ballRadius,t.grey()),this.paddle=new s(this.paddleXStart,this.paddleYStart,this.paddleWidth,this.paddleHeight,t.grey()),this.bricks=new l({cols:this.brickColumnCount,rows:this.brickRowCount,width:this.brickWidth,height:this.brickHeight,padding:this.brickPadding,offsetLeft:this.brickOffsetLeft,offsetTop:this.brickOffsetTop}),this.scoreLabel=new d("Score: ",8,20,t.white()),this.livesLabel=new d("Lives: ",this.canvas.width-65,20,t.white()),this.rightPressed=!1,this.leftPressed=!1,this.setup(),this.draw()}setup(){this.livesLabel.value=3,this.resetBallAndPaddle(),document.addEventListener("keydown",this.keyDownHandler.bind(this),!1),document.addEventListener("keyup",this.keyUpHandler.bind(this),!1),document.addEventListener("mousemove",this.mouseMoveHandler.bind(this),!1)}resetBallAndPaddle(){this.ball.color=t.grey(),this.ball.x=this.canvas.width/2,this.ball.y=this.canvas.height-30,this.ball.speed=this.startingBallSpeed,this.ball.dx=1*this.ball.speed,this.ball.dy=-1*this.ball.speed,this.paddle.color=t.grey(),this.paddle.x=this.paddleXStart}collisionBricks(){for(let t=0;t<this.bricks.cols;t+=1)for(let s=0;s<this.bricks.rows;s+=1){const i=this.bricks.bricks[t][s];1===i.status&&this.ball.x>i.x&&this.ball.x<i.x+i.width&&this.ball.y>i.y&&this.ball.y<i.y+i.height+this.ball.radius&&(this.ball.dy=-this.ball.dy,this.ball.color=i.color,i.status=0,this.scoreLabel.value+=1,this.checkIfWon())}}checkIfWon(){this.score===this.bricks.rowCount*this.bricks.columnCount&&(this.displayYouWin(),document.location.reload())}displayYouWin(){this.ctx.beginPath(),this.ctx.font=r,this.ctx.fillStyle=t.grey();const s="YOU WIN!",i=this.ctx.measureText(s).width;this.ctx.fillText(s,this.canvas.width/2-i/2,this.canvas.height/2),this.over=!0}movePaddle(){this.rightPressed&&this.paddle.x<this.canvas.width-this.paddle.width?this.paddle.moveBy(7,0):this.leftPressed&&this.paddle.x>0&&this.paddle.moveBy(-7,0)}displayGameOver(){this.ctx.beginPath(),this.ctx.font=r,this.ctx.fillStyle=t.grey();const s="GAMEOVER",i=this.ctx.measureText(s).width;this.ctx.fillText(s,this.canvas.width/2-i/2,this.canvas.height/2),this.over=!0}collisionWall(){(this.ball.x+this.ball.dx>this.canvas.width-this.ball.radius||this.ball.x+this.ball.dx<this.ball.radius)&&(this.ball.dx=-this.ball.dx,this.ball.color=t.grey())}collisionTop(){this.ball.y+this.ball.dy<this.ball.rcadius&&(this.ball.dy=-this.ball.dy)}collisionBottomAndPaddle(){this.ball.y+this.ball.dy>this.canvas.height-this.ball.radius&&(this.ball.x>this.paddle.x&&this.ball.x<this.paddle.x+this.paddle.width?(this.ball.dy=-this.ball.dy,this.paddle.color=this.ball.color,a.style.backgroundColor=""+this.paddle.color,this.checkPowerUp()):(this.livesLabel.value-=1,this.livesLabel.value<1?(this.displayGameOver(),this.resetBallAndPaddle()):this.resetBallAndPaddle()))}collisionWithCanvasAndPaddle(){this.collisionWall(),this.collisionTop(),this.collisionBottomAndPaddle()}checkPowerUp(){switch(this.paddle.color){case t.violet():return this.ball.updateSpeed(6),this.ball.speed;case t.purple():return this.paddle.width=this.paddleWidth-60,this.paddle.width;case t.blue():return this.ball.updateSpeed(5),this.ball.speed;case t.lightBlue():return this.paddle.width=this.paddleWidth+60,this.ball.speed;case t.skyBlue():return this.paddle.width=this.paddleWidth-40,this.paddle.width;case t.blueGreen():return this.paddle.width=this.paddleWidth+40,this.paddle.width;case t.green():return this.ball.updateSpeed(4),this.ball.speed;case t.limeGreen():return this.paddle.width=this.paddleWidth-20,this.paddle.width;case t.yellow():return this.ball.updateSpeed(3),this.ball.speed;case t.orange():return this.paddle.width=this.paddleWidth+20,this.paddle.width;case t.red():return this.ball.updateSpeed(2),this.ball.speed;default:return null}}keyDownHandler(t){t.key===n||t.key===c?this.rightPressed=!0:t.key!==u&&t.key!==o||(this.leftPressed=!0)}keyUpHandler(t){t.key===n||t.key===c?this.rightPressed=!1:t.key!==u&&t.key!==o||(this.leftPressed=!1)}mouseMoveHandler(t){const s=t.clientX-this.canvas.offsetLeft;s>0&&s<this.canvas.width&&this.paddle.moveTo(s-this.paddle.width/2,this.paddleYStart)}draw(){this.over||(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.bricks.render(this.ctx),this.ball.render(this.ctx),this.paddle.render(this.ctx),this.scoreLabel.render(this.ctx),this.livesLabel.render(this.ctx),this.collisionBricks(),this.ball.move(),this.movePaddle(),this.collisionWithCanvasAndPaddle(),requestAnimationFrame((()=>this.draw("canvas"))))}}("canvas")})();